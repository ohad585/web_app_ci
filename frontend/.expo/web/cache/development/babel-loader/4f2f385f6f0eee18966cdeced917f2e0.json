{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport apiClient from \"./ApiClient\";\nvar renewToken = function () {\n  var _ref = _asyncToGenerator(function* (userC) {\n    console.log(\"Refreshing token\");\n    apiClient.addAsyncRequestTransform(function (request) {\n      return _asyncToGenerator(function* () {\n        request.headers['authorization'] = \"barer \" + userC.refresh_token;\n      });\n    });\n    var res = yield apiClient.get(\"/auth/refresh\", {\n      _id: userC._id\n    });\n    console.log(res.ok + \" \" + res.data);\n    if (res.ok) {\n      return {\n        _id: res.data._id,\n        access_token: res.data.access_token,\n        refresh_token: res.data.refresh_token\n      };\n    }\n  });\n  return function renewToken(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getUserPosts = function () {\n  var _ref3 = _asyncToGenerator(function* (userID) {\n    var res = yield apiClient.get(\"/post/\");\n    var posts = Array();\n    res.data.forEach(function (element) {\n      console.log(userID + \" ELEMENT SENDER \" + element.sender);\n      if (element.sender == userID) {\n        var p = {\n          senderID: element.sender,\n          text: element.message,\n          imageUrl: element.imageUrl,\n          postID: element._id\n        };\n        posts.push(p);\n      } else {}\n    });\n    return posts;\n  });\n  return function getUserPosts(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar getAllPosts = function () {\n  var _ref4 = _asyncToGenerator(function* () {\n    var res = yield apiClient.get(\"/post/\");\n    var posts = Array();\n    if (res.data) {\n      res.data.forEach(function (element) {\n        var p = {\n          senderID: element.sender,\n          text: element.message,\n          imageUrl: element.imageUrl,\n          postID: element._id\n        };\n        console.log(\"Got post \" + p.text + \" \" + p.imageUrl);\n        posts.push(p);\n      });\n    } else {\n      console.log(\"getAllPosts fail\");\n    }\n    return posts;\n  });\n  return function getAllPosts() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar addPost = function () {\n  var _ref5 = _asyncToGenerator(function* (p, userC) {\n    console.log(\"Token on add post API \" + userC.access_token);\n    apiClient.addAsyncRequestTransform(function (request) {\n      return _asyncToGenerator(function* () {\n        request.headers['authorization'] = \"barer \" + userC.access_token;\n      });\n    });\n    var res = yield apiClient.post(\"/post\", {\n      sender: p.senderID,\n      text: p.text,\n      imageUrl: p.imageUrl\n    });\n    if (res.ok) {\n      console.log(\"addPost success\");\n    } else {\n      console.log(\"addPost fail \");\n      if (res.problem.toString() === \"NETWORK_ERROR\") {\n        var data = yield renewToken(userC);\n        console.log(data);\n      }\n    }\n  });\n  return function addPost(_x3, _x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar uploadImage = function () {\n  var _ref7 = _asyncToGenerator(function* (imageUri, userC) {\n    console.log(\"uploadImage \" + imageUri);\n    var formData = new FormData();\n    formData.append('file', {\n      name: 'name',\n      type: 'image/jpeg',\n      uri: imageUri\n    });\n    var url = '/file/post_file';\n    var res = yield apiClient.post(url, formData);\n    if (res.ok) {\n      console.log(\"upload Image passed \" + res.data);\n      return res.data.url;\n    } else {\n      console.log(\"save failed \" + res.problem);\n    }\n  });\n  return function uploadImage(_x5, _x6) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar updatePost = function () {\n  var _ref8 = _asyncToGenerator(function* (p, userC) {\n    apiClient.addAsyncRequestTransform(function (request) {\n      return _asyncToGenerator(function* () {\n        request.headers['authorization'] = \"barer \" + userC.access_token;\n      });\n    });\n    console.log(\"updatePost \" + p);\n    var res = yield apiClient.post(\"/post/updateMessage/\", {\n      senderID: p.senderID,\n      text: p.text,\n      imageUri: p.imageUrl,\n      postID: p.postID\n    });\n    if (res.ok) {\n      console.log(\"update Post success\");\n    } else {\n      console.log(\"update Post fail\");\n    }\n  });\n  return function updatePost(_x7, _x8) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar removePost = function () {\n  var _ref10 = _asyncToGenerator(function* (postID, access_token) {\n    apiClient.addAsyncRequestTransform(function (request) {\n      return _asyncToGenerator(function* () {\n        request.headers['authorization'] = \"barer \" + access_token;\n      });\n    });\n    var res = yield apiClient.delete(\"/post/\" + postID, {});\n    if (res.ok) {\n      console.log(\"remove Post success\");\n    } else {\n      console.log(\"remove Post fail\");\n    }\n  });\n  return function removePost(_x9, _x10) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nexport default {\n  getAllPosts: getAllPosts,\n  addPost: addPost,\n  uploadImage: uploadImage,\n  getUserPosts: getUserPosts,\n  updatePost: updatePost,\n  removePost: removePost\n};","map":{"version":3,"names":["apiClient","renewToken","_ref","_asyncToGenerator","userC","console","log","addAsyncRequestTransform","request","headers","refresh_token","res","get","_id","ok","data","access_token","_x","apply","arguments","getUserPosts","_ref3","userID","posts","Array","forEach","element","sender","p","senderID","text","message","imageUrl","postID","push","_x2","getAllPosts","_ref4","addPost","_ref5","post","problem","toString","_x3","_x4","uploadImage","_ref7","imageUri","formData","FormData","append","name","type","uri","url","_x5","_x6","updatePost","_ref8","_x7","_x8","removePost","_ref10","delete","_x9","_x10"],"sources":["/Users/ohadshalom/Desktop/devops_projects/cicd_project/frontend/model/post_api.tsx"],"sourcesContent":["import apiClient from \"./ApiClient\";\nimport { Post } from \"./post_model\";\nimport { User, UserCredentials } from \"./user_model\";\n\nconst renewToken = async (userC:UserCredentials)=>{\n  console.log(\"Refreshing token\");\n  \n  apiClient.addAsyncRequestTransform(request =>async () => {\n    request.headers['authorization'] = \"barer \" + userC.refresh_token\n  })\n  const res = await apiClient.get(\"/auth/refresh\",{\n    _id:userC._id\n  });\n\n  console.log(res.ok + \" \" + res.data);\n  if(res.ok){\n    return ({\n      _id:res.data._id,\n      access_token:res.data.access_token,\n      refresh_token:res.data.refresh_token\n    })\n  }\n  \n}\n\nconst getUserPosts=async(userID: String)=>{\n  const res = await apiClient.get(\"/post/\");\n  let posts = Array<Post>()\n  \n    res.data.forEach((element) => {\n      console.log(userID+\" ELEMENT SENDER \"+element.sender);\n      \n      if(element.sender==userID){\n      const p:Post ={\n        senderID: element.sender,\n        text: element.message,\n        imageUrl: element.imageUrl,\n        postID:element._id\n      }\n      posts.push(p)\n    }\n    else{\n\n      }\n    })\n  return posts\n};\n\n\nconst getAllPosts = async () => {\n  const res = await apiClient.get(\"/post/\");\n  let posts = Array<Post>()\n  \n  if(res.data){\n    res.data.forEach((element) => {\n      const p:Post ={\n        senderID: element.sender,\n        text: element.message,\n        imageUrl: element.imageUrl,\n        postID:element._id\n      }\n      console.log(\"Got post \"+p.text+\" \"+p.imageUrl);\n      \n      posts.push(p)\n    });\n  }else {\n    console.log(\"getAllPosts fail\");\n    \n  }\n  return posts\n};\n\nconst addPost = async (p: Post,userC:UserCredentials) => {\n  console.log(\"Token on add post API \"+userC.access_token);\n  apiClient.addAsyncRequestTransform(request =>async () => {\n    request.headers['authorization'] = \"barer \" + userC.access_token\n  })\n  const res = await apiClient.post(\"/post\",{\n    sender: p.senderID,\n    text: p.text,\n   imageUrl: p.imageUrl\n\n  });\n  if(res.ok){\n    console.log(\"addPost success\");\n    \n  }else {\n    console.log(\"addPost fail \");\n    if(res.problem.toString()===\"NETWORK_ERROR\"){\n        const data = await renewToken(userC)\n        console.log(data);\n        \n    }\n  }};\n\n\n  const uploadImage = async (imageUri:String,userC:UserCredentials)=> {\n    console.log(\"uploadImage \"+imageUri)\n    const formData = new FormData()\n    formData.append('file',{name: 'name', type:'image/jpeg', uri: imageUri})\n    let url = '/file/post_file'\n    const res = await apiClient.post(url,formData)\n    if (res.ok){\n        console.log(\"upload Image passed \" + res.data)\n        return res.data.url\n    }else{\n        console.log(\"save failed \" + res.problem)\n    }\n}\nconst updatePost = async (p:Post,userC:UserCredentials) => {\n  apiClient.addAsyncRequestTransform(request =>async () => {\n    request.headers['authorization'] = \"barer \" + userC.access_token\n  })\n  console.log(\"updatePost \"+p);\n  \n  const res = await apiClient.post(\"/post/updateMessage/\",{\n      senderID:p.senderID,\n      text:p.text,\n      imageUri:p.imageUrl,\n      postID:p.postID\n    });   \n    if(res.ok){\n      console.log(\"update Post success\");\n      \n    }else {\n      console.log(\"update Post fail\");\n  }};\n\n\nconst removePost=async (postID: String,access_token:String) =>{\n  apiClient.addAsyncRequestTransform(request =>async () => {\n    request.headers['authorization'] = \"barer \" + access_token\n  })\n  const res = await apiClient.delete(\"/post/\"+postID,{});   \n  if(res.ok){\n    console.log(\"remove Post success\");\n    \n  }else {\n    console.log(\"remove Post fail\");\n}};\n\n\n\n\nexport default {\n  getAllPosts,\n  addPost,\n  uploadImage,\n  getUserPosts,\n  updatePost,\n  removePost\n};\n"],"mappings":";AAAA,OAAOA,SAAS;AAIhB,IAAMC,UAAU;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAqB,EAAG;IAChDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAE/BN,SAAS,CAACO,wBAAwB,CAAC,UAAAC,OAAO;MAAA,OAAAL,iBAAA,CAAG,aAAY;QACvDK,OAAO,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGL,KAAK,CAACM,aAAa;MACnE,CAAC;IAAA,EAAC;IACF,IAAMC,GAAG,SAASX,SAAS,CAACY,GAAG,CAAC,eAAe,EAAC;MAC9CC,GAAG,EAACT,KAAK,CAACS;IACZ,CAAC,CAAC;IAEFR,OAAO,CAACC,GAAG,CAACK,GAAG,CAACG,EAAE,GAAG,GAAG,GAAGH,GAAG,CAACI,IAAI,CAAC;IACpC,IAAGJ,GAAG,CAACG,EAAE,EAAC;MACR,OAAQ;QACND,GAAG,EAACF,GAAG,CAACI,IAAI,CAACF,GAAG;QAChBG,YAAY,EAACL,GAAG,CAACI,IAAI,CAACC,YAAY;QAClCN,aAAa,EAACC,GAAG,CAACI,IAAI,CAACL;MACzB,CAAC;IACH;EAEF,CAAC;EAAA,gBAnBKT,UAAUA,CAAAgB,EAAA;IAAA,OAAAf,IAAA,CAAAgB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAmBf;AAED,IAAMC,YAAY;EAAA,IAAAC,KAAA,GAAAlB,iBAAA,CAAC,WAAMmB,MAAc,EAAG;IACxC,IAAMX,GAAG,SAASX,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;IACzC,IAAIW,KAAK,GAAGC,KAAK,EAAQ;IAEvBb,GAAG,CAACI,IAAI,CAACU,OAAO,CAAC,UAACC,OAAO,EAAK;MAC5BrB,OAAO,CAACC,GAAG,CAACgB,MAAM,GAAC,kBAAkB,GAACI,OAAO,CAACC,MAAM,CAAC;MAErD,IAAGD,OAAO,CAACC,MAAM,IAAEL,MAAM,EAAC;QAC1B,IAAMM,CAAM,GAAE;UACZC,QAAQ,EAAEH,OAAO,CAACC,MAAM;UACxBG,IAAI,EAAEJ,OAAO,CAACK,OAAO;UACrBC,QAAQ,EAAEN,OAAO,CAACM,QAAQ;UAC1BC,MAAM,EAACP,OAAO,CAACb;QACjB,CAAC;QACDU,KAAK,CAACW,IAAI,CAACN,CAAC,CAAC;MACf,CAAC,MACG,CAEF;IACF,CAAC,CAAC;IACJ,OAAOL,KAAK;EACd,CAAC;EAAA,gBArBKH,YAAYA,CAAAe,GAAA;IAAA,OAAAd,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAqBjB;AAGD,IAAMiB,WAAW;EAAA,IAAAC,KAAA,GAAAlC,iBAAA,CAAG,aAAY;IAC9B,IAAMQ,GAAG,SAASX,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;IACzC,IAAIW,KAAK,GAAGC,KAAK,EAAQ;IAEzB,IAAGb,GAAG,CAACI,IAAI,EAAC;MACVJ,GAAG,CAACI,IAAI,CAACU,OAAO,CAAC,UAACC,OAAO,EAAK;QAC5B,IAAME,CAAM,GAAE;UACZC,QAAQ,EAAEH,OAAO,CAACC,MAAM;UACxBG,IAAI,EAAEJ,OAAO,CAACK,OAAO;UACrBC,QAAQ,EAAEN,OAAO,CAACM,QAAQ;UAC1BC,MAAM,EAACP,OAAO,CAACb;QACjB,CAAC;QACDR,OAAO,CAACC,GAAG,CAAC,WAAW,GAACsB,CAAC,CAACE,IAAI,GAAC,GAAG,GAACF,CAAC,CAACI,QAAQ,CAAC;QAE9CT,KAAK,CAACW,IAAI,CAACN,CAAC,CAAC;MACf,CAAC,CAAC;IACJ,CAAC,MAAK;MACJvB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAEjC;IACA,OAAOiB,KAAK;EACd,CAAC;EAAA,gBArBKa,WAAWA,CAAA;IAAA,OAAAC,KAAA,CAAAnB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAqBhB;AAED,IAAMmB,OAAO;EAAA,IAAAC,KAAA,GAAApC,iBAAA,CAAG,WAAOyB,CAAO,EAACxB,KAAqB,EAAK;IACvDC,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAACF,KAAK,CAACY,YAAY,CAAC;IACxDhB,SAAS,CAACO,wBAAwB,CAAC,UAAAC,OAAO;MAAA,OAAAL,iBAAA,CAAG,aAAY;QACvDK,OAAO,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGL,KAAK,CAACY,YAAY;MAClE,CAAC;IAAA,EAAC;IACF,IAAML,GAAG,SAASX,SAAS,CAACwC,IAAI,CAAC,OAAO,EAAC;MACvCb,MAAM,EAAEC,CAAC,CAACC,QAAQ;MAClBC,IAAI,EAAEF,CAAC,CAACE,IAAI;MACbE,QAAQ,EAAEJ,CAAC,CAACI;IAEb,CAAC,CAAC;IACF,IAAGrB,GAAG,CAACG,EAAE,EAAC;MACRT,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAEhC,CAAC,MAAK;MACJD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,IAAGK,GAAG,CAAC8B,OAAO,CAACC,QAAQ,EAAE,KAAG,eAAe,EAAC;QACxC,IAAM3B,IAAI,SAASd,UAAU,CAACG,KAAK,CAAC;QACpCC,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC;MAErB;IACF;EAAC,CAAC;EAAA,gBArBEuB,OAAOA,CAAAK,GAAA,EAAAC,GAAA;IAAA,OAAAL,KAAA,CAAArB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAqBT;AAGF,IAAM0B,WAAW;EAAA,IAAAC,KAAA,GAAA3C,iBAAA,CAAG,WAAO4C,QAAe,EAAC3C,KAAqB,EAAI;IAClEC,OAAO,CAACC,GAAG,CAAC,cAAc,GAACyC,QAAQ,CAAC;IACpC,IAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAC;MAACC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAC,YAAY;MAAEC,GAAG,EAAEN;IAAQ,CAAC,CAAC;IACxE,IAAIO,GAAG,GAAG,iBAAiB;IAC3B,IAAM3C,GAAG,SAASX,SAAS,CAACwC,IAAI,CAACc,GAAG,EAACN,QAAQ,CAAC;IAC9C,IAAIrC,GAAG,CAACG,EAAE,EAAC;MACPT,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGK,GAAG,CAACI,IAAI,CAAC;MAC9C,OAAOJ,GAAG,CAACI,IAAI,CAACuC,GAAG;IACvB,CAAC,MAAI;MACDjD,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGK,GAAG,CAAC8B,OAAO,CAAC;IAC7C;EACJ,CAAC;EAAA,gBAZOI,WAAWA,CAAAU,GAAA,EAAAC,GAAA;IAAA,OAAAV,KAAA,CAAA5B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAYlB;AACD,IAAMsC,UAAU;EAAA,IAAAC,KAAA,GAAAvD,iBAAA,CAAG,WAAOyB,CAAM,EAACxB,KAAqB,EAAK;IACzDJ,SAAS,CAACO,wBAAwB,CAAC,UAAAC,OAAO;MAAA,OAAAL,iBAAA,CAAG,aAAY;QACvDK,OAAO,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGL,KAAK,CAACY,YAAY;MAClE,CAAC;IAAA,EAAC;IACFX,OAAO,CAACC,GAAG,CAAC,aAAa,GAACsB,CAAC,CAAC;IAE5B,IAAMjB,GAAG,SAASX,SAAS,CAACwC,IAAI,CAAC,sBAAsB,EAAC;MACpDX,QAAQ,EAACD,CAAC,CAACC,QAAQ;MACnBC,IAAI,EAACF,CAAC,CAACE,IAAI;MACXiB,QAAQ,EAACnB,CAAC,CAACI,QAAQ;MACnBC,MAAM,EAACL,CAAC,CAACK;IACX,CAAC,CAAC;IACF,IAAGtB,GAAG,CAACG,EAAE,EAAC;MACRT,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAEpC,CAAC,MAAK;MACJD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACnC;EAAC,CAAC;EAAA,gBAjBEmD,UAAUA,CAAAE,GAAA,EAAAC,GAAA;IAAA,OAAAF,KAAA,CAAAxC,KAAA,OAAAC,SAAA;EAAA;AAAA,GAiBZ;AAGJ,IAAM0C,UAAU;EAAA,IAAAC,MAAA,GAAA3D,iBAAA,CAAC,WAAO8B,MAAc,EAACjB,YAAmB,EAAI;IAC5DhB,SAAS,CAACO,wBAAwB,CAAC,UAAAC,OAAO;MAAA,OAAAL,iBAAA,CAAG,aAAY;QACvDK,OAAO,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGO,YAAY;MAC5D,CAAC;IAAA,EAAC;IACF,IAAML,GAAG,SAASX,SAAS,CAAC+D,MAAM,CAAC,QAAQ,GAAC9B,MAAM,EAAC,CAAC,CAAC,CAAC;IACtD,IAAGtB,GAAG,CAACG,EAAE,EAAC;MACRT,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAEpC,CAAC,MAAK;MACJD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACnC;EAAC,CAAC;EAAA,gBAVIuD,UAAUA,CAAAG,GAAA,EAAAC,IAAA;IAAA,OAAAH,MAAA,CAAA5C,KAAA,OAAAC,SAAA;EAAA;AAAA,GAUd;AAKF,eAAe;EACbiB,WAAW,EAAXA,WAAW;EACXE,OAAO,EAAPA,OAAO;EACPO,WAAW,EAAXA,WAAW;EACXzB,YAAY,EAAZA,YAAY;EACZqC,UAAU,EAAVA,UAAU;EACVI,UAAU,EAAVA;AACF,CAAC"},"metadata":{},"sourceType":"module"}