{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport UserApi from \"./user_api\";\nvar getAllUsers = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var users = yield UserApi.getAllUsers();\n    return users;\n  });\n  return function getAllUsers() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar addUser = function () {\n  var _ref2 = _asyncToGenerator(function* (user) {\n    return yield UserApi.addUser(user);\n  });\n  return function addUser(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar addGoogleUser = function () {\n  var _ref3 = _asyncToGenerator(function* (usr) {\n    return yield UserApi.addGoogleUser(usr);\n  });\n  return function addGoogleUser(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar loginUser = function () {\n  var _ref4 = _asyncToGenerator(function* (user) {\n    console.log(\"user_model loginUser \" + user.email + \" \" + user.password);\n    return yield UserApi.loginUser(user);\n  });\n  return function loginUser(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar uploadImage = function () {\n  var _ref5 = _asyncToGenerator(function* (imageUri, accessToken) {\n    console.log(\"User upload image \");\n    return yield UserApi.uploadImage(imageUri, accessToken);\n  });\n  return function uploadImage(_x4, _x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar updateUser = function () {\n  var _ref6 = _asyncToGenerator(function* (user, oldEmail, accessToken, id) {\n    yield UserApi.updateUser(user, oldEmail, accessToken, id);\n  });\n  return function updateUser(_x6, _x7, _x8, _x9) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar getUserById = function () {\n  var _ref7 = _asyncToGenerator(function* (id) {\n    return yield UserApi.getuserById(id);\n  });\n  return function getUserById(_x10) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport default {\n  getAllUsers: getAllUsers,\n  addUser: addUser,\n  loginUser: loginUser,\n  uploadImage: uploadImage,\n  addGoogleUser: addGoogleUser,\n  updateUser: updateUser,\n  getUserById: getUserById\n};","map":{"version":3,"names":["UserApi","getAllUsers","_ref","_asyncToGenerator","users","apply","arguments","addUser","_ref2","user","_x","addGoogleUser","_ref3","usr","_x2","loginUser","_ref4","console","log","email","password","_x3","uploadImage","_ref5","imageUri","accessToken","_x4","_x5","updateUser","_ref6","oldEmail","id","_x6","_x7","_x8","_x9","getUserById","_ref7","getuserById","_x10"],"sources":["/Users/ohadshalom/Desktop/devops_projects/cicd_project/frontend/model/user_model.tsx"],"sourcesContent":["import UserApi from \"./user_api\";\n\nexport type User = {\n  email: String;\n  password: String;\n  imageUri: String;\n};\n\nexport type UserCredentials = {\n  access_token: String;\n  refresh_token: String;\n  _id: String;\n};\n\nconst getAllUsers = async () => {\n  const users = await UserApi.getAllUsers();\n  return users;\n};\nconst addUser = async (user: User) => {\n  return await UserApi.addUser(user);\n}; \nconst addGoogleUser = async (usr: User) => {\n  return await UserApi.addGoogleUser(usr);\n};\n\nconst loginUser = async (user: User) => {\n  console.log(\"user_model loginUser \" + user.email + \" \" + user.password);\n  return await UserApi.loginUser(user);\n};\nconst uploadImage = async (imageUri: String,accessToken:String) => {\n  console.log(\"User upload image \");\n  return await UserApi.uploadImage(imageUri,accessToken);\n};\n\n\nconst updateUser = async (user: User, oldEmail:String,accessToken:String,id:String) => {\n  await UserApi.updateUser(user,oldEmail,accessToken,id)\n};\n\nconst getUserById = async (id:String) => {\n  return await UserApi.getuserById(id)\n};\n\n\nexport default {\n  getAllUsers,\n  addUser,\n  loginUser,\n  uploadImage,\n  addGoogleUser,\n  updateUser,\n  getUserById\n};\n"],"mappings":";AAAA,OAAOA,OAAO;AAcd,IAAMC,WAAW;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC9B,IAAMC,KAAK,SAASJ,OAAO,CAACC,WAAW,EAAE;IACzC,OAAOG,KAAK;EACd,CAAC;EAAA,gBAHKH,WAAWA,CAAA;IAAA,OAAAC,IAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;AAAA,GAGhB;AACD,IAAMC,OAAO;EAAA,IAAAC,KAAA,GAAAL,iBAAA,CAAG,WAAOM,IAAU,EAAK;IACpC,aAAaT,OAAO,CAACO,OAAO,CAACE,IAAI,CAAC;EACpC,CAAC;EAAA,gBAFKF,OAAOA,CAAAG,EAAA;IAAA,OAAAF,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAEZ;AACD,IAAMK,aAAa;EAAA,IAAAC,KAAA,GAAAT,iBAAA,CAAG,WAAOU,GAAS,EAAK;IACzC,aAAab,OAAO,CAACW,aAAa,CAACE,GAAG,CAAC;EACzC,CAAC;EAAA,gBAFKF,aAAaA,CAAAG,GAAA;IAAA,OAAAF,KAAA,CAAAP,KAAA,OAAAC,SAAA;EAAA;AAAA,GAElB;AAED,IAAMS,SAAS;EAAA,IAAAC,KAAA,GAAAb,iBAAA,CAAG,WAAOM,IAAU,EAAK;IACtCQ,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGT,IAAI,CAACU,KAAK,GAAG,GAAG,GAAGV,IAAI,CAACW,QAAQ,CAAC;IACvE,aAAapB,OAAO,CAACe,SAAS,CAACN,IAAI,CAAC;EACtC,CAAC;EAAA,gBAHKM,SAASA,CAAAM,GAAA;IAAA,OAAAL,KAAA,CAAAX,KAAA,OAAAC,SAAA;EAAA;AAAA,GAGd;AACD,IAAMgB,WAAW;EAAA,IAAAC,KAAA,GAAApB,iBAAA,CAAG,WAAOqB,QAAgB,EAACC,WAAkB,EAAK;IACjER,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC,aAAalB,OAAO,CAACsB,WAAW,CAACE,QAAQ,EAACC,WAAW,CAAC;EACxD,CAAC;EAAA,gBAHKH,WAAWA,CAAAI,GAAA,EAAAC,GAAA;IAAA,OAAAJ,KAAA,CAAAlB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAGhB;AAGD,IAAMsB,UAAU;EAAA,IAAAC,KAAA,GAAA1B,iBAAA,CAAG,WAAOM,IAAU,EAAEqB,QAAe,EAACL,WAAkB,EAACM,EAAS,EAAK;IACrF,MAAM/B,OAAO,CAAC4B,UAAU,CAACnB,IAAI,EAACqB,QAAQ,EAACL,WAAW,EAACM,EAAE,CAAC;EACxD,CAAC;EAAA,gBAFKH,UAAUA,CAAAI,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAN,KAAA,CAAAxB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAEf;AAED,IAAM8B,WAAW;EAAA,IAAAC,KAAA,GAAAlC,iBAAA,CAAG,WAAO4B,EAAS,EAAK;IACvC,aAAa/B,OAAO,CAACsC,WAAW,CAACP,EAAE,CAAC;EACtC,CAAC;EAAA,gBAFKK,WAAWA,CAAAG,IAAA;IAAA,OAAAF,KAAA,CAAAhC,KAAA,OAAAC,SAAA;EAAA;AAAA,GAEhB;AAGD,eAAe;EACbL,WAAW,EAAXA,WAAW;EACXM,OAAO,EAAPA,OAAO;EACPQ,SAAS,EAATA,SAAS;EACTO,WAAW,EAAXA,WAAW;EACXX,aAAa,EAAbA,aAAa;EACbiB,UAAU,EAAVA,UAAU;EACVQ,WAAW,EAAXA;AACF,CAAC"},"metadata":{},"sourceType":"module"}