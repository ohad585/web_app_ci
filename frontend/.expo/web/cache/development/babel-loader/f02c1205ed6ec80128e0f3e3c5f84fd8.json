{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport colors from \"../../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar GoogleLoginBtn = function GoogleLoginBtn(_ref) {\n  var successHandler = _ref.successHandler;\n  var _Google$useAuthReques = Google.useAuthRequest({\n      expoClientId: '508060421836-kd7fjltjf8v2o0l7dp6gltatke8rd8pa.apps.googleusercontent.com',\n      androidClientId: \"508060421836-94bm4uhg34q5po16kchuoqo91uhbhm29.apps.googleusercontent.com\",\n      iosClientId: \"508060421836-mlugv1clgv1qpqai8uts7qhfb0tbfsg3.apps.googleusercontent.com\"\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var _response$authenticat, _response$authenticat2;\n      var authentication = response.authentication;\n      console.log(((_response$authenticat = response.authentication) == null ? void 0 : _response$authenticat.accessToken) + \" \" + response.params);\n      var _accessToken = (_response$authenticat2 = response.authentication) == null ? void 0 : _response$authenticat2.accessToken;\n      successHandler(_accessToken == null ? void 0 : _accessToken.toString());\n    }\n  }, [response]);\n  return _jsx(TouchableHighlight, {\n    onPress: function onPress() {\n      promptAsync();\n    },\n    underlayColor: colors.clickBackground,\n    children: _jsx(Ionicons, {\n      name: \"logo-google\",\n      size: 32\n    })\n  });\n};\nexport default GoogleLoginBtn;","map":{"version":3,"names":["React","WebBrowser","Google","TouchableHighlight","Ionicons","colors","jsx","_jsx","maybeCompleteAuthSession","GoogleLoginBtn","_ref","successHandler","_Google$useAuthReques","useAuthRequest","expoClientId","androidClientId","iosClientId","_Google$useAuthReques2","_slicedToArray","request","response","promptAsync","useEffect","type","_response$authenticat","_response$authenticat2","authentication","console","log","accessToken","params","toString","onPress","underlayColor","clickBackground","children","name","size"],"sources":["/Users/ohadshalom/Desktop/devops_projects/cicd_project/frontend/screens/component/custom_google_login_button.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\nimport { Button, TouchableHighlight, TouchableOpacity } from 'react-native';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport colors from '../../constants/colors';\n\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst GoogleLoginBtn:React.FC<{successHandler:(accessToken:String)=>void}> = ({successHandler})=> {\n  const [request, response, promptAsync] = Google.useAuthRequest({\n    expoClientId: '508060421836-kd7fjltjf8v2o0l7dp6gltatke8rd8pa.apps.googleusercontent.com',\n    androidClientId: \"508060421836-94bm4uhg34q5po16kchuoqo91uhbhm29.apps.googleusercontent.com\",\n    iosClientId: \"508060421836-mlugv1clgv1qpqai8uts7qhfb0tbfsg3.apps.googleusercontent.com\",\n  });\n\n  \n  React.useEffect(() => {\n    if (response?.type === 'success') {\n      const { authentication } = response;\n      console.log(response.authentication?.accessToken+\" \"+response.params)\n      const accessToken = response.authentication?.accessToken\n      successHandler(accessToken?.toString())\n      }\n  }, [response]);\n\n\n  return(\n    <TouchableHighlight onPress={()=>{promptAsync()}} underlayColor={colors.clickBackground}>\n      <Ionicons name='logo-google' size={32}></Ionicons>\n    </TouchableHighlight>\n  )\n}\n\n\nexport default GoogleLoginBtn"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,OAAO,KAAKC,MAAM,MAAM,oCAAoC;AAAC,OAAAC,kBAAA;AAE7D,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,MAAM;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAG5CN,UAAU,CAACO,wBAAwB,EAAE;AAErC,IAAMC,cAAoE,GAAG,SAAvEA,cAAoEA,CAAAC,IAAA,EAAwB;EAAA,IAAnBC,cAAc,GAAAD,IAAA,CAAdC,cAAc;EAC3F,IAAAC,qBAAA,GAAyCV,MAAM,CAACW,cAAc,CAAC;MAC7DC,YAAY,EAAE,0EAA0E;MACxFC,eAAe,EAAE,0EAA0E;MAC3FC,WAAW,EAAE;IACf,CAAC,CAAC;IAAAC,sBAAA,GAAAC,cAAA,CAAAN,qBAAA;IAJKO,OAAO,GAAAF,sBAAA;IAAEG,QAAQ,GAAAH,sBAAA;IAAEI,WAAW,GAAAJ,sBAAA;EAOrCjB,KAAK,CAACsB,SAAS,CAAC,YAAM;IACpB,IAAI,CAAAF,QAAQ,oBAARA,QAAQ,CAAEG,IAAI,MAAK,SAAS,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAChC,IAAQC,cAAc,GAAKN,QAAQ,CAA3BM,cAAc;MACtBC,OAAO,CAACC,GAAG,CAAC,EAAAJ,qBAAA,GAAAJ,QAAQ,CAACM,cAAc,qBAAvBF,qBAAA,CAAyBK,WAAW,IAAC,GAAG,GAACT,QAAQ,CAACU,MAAM,CAAC;MACrE,IAAMD,YAAW,IAAAJ,sBAAA,GAAGL,QAAQ,CAACM,cAAc,qBAAvBD,sBAAA,CAAyBI,WAAW;MACxDlB,cAAc,CAACkB,YAAW,oBAAXA,YAAW,CAAEE,QAAQ,EAAE,CAAC;IACvC;EACJ,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAGd,OACEb,IAAA,CAACJ,kBAAkB;IAAC6B,OAAO,EAAE,SAAAA,QAAA,EAAI;MAACX,WAAW,EAAE;IAAA,CAAE;IAACY,aAAa,EAAE5B,MAAM,CAAC6B,eAAgB;IAAAC,QAAA,EACtF5B,IAAA,CAACH,QAAQ;MAACgC,IAAI,EAAC,aAAa;MAACC,IAAI,EAAE;IAAG;EAAY,EAC/B;AAEzB,CAAC;AAGD,eAAe5B,cAAc"},"metadata":{},"sourceType":"module"}