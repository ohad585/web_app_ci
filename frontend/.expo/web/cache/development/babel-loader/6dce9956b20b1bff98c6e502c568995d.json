{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PostModel from \"../model/post_model\";\nimport COLORS from \"../constants/colors\";\nimport ActivityIndicator from \"./component/custom_activity_indicator\";\nimport CustomImagePicker from \"./component/custom_image_picker\";\nimport UserModel from \"../model/user_model\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Add_Post = function Add_Post(_ref) {\n  var _route$params;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    postID = _useState4[0],\n    setPostID = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    senderID = _useState6[0],\n    setSenderID = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    text = _useState8[0],\n    setText = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    imageUri = _useState10[0],\n    setImageUri = _useState10[1];\n  var _useState11 = useState({\n      _id: \"\",\n      access_token: \"\",\n      refresh_token: \"\"\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    userInfo = _useState12[0],\n    setUserInfo = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    userEmail = _useState14[0],\n    setUserEmail = _useState14[1];\n  var getUser = function () {\n    var _ref2 = _asyncToGenerator(function* (id) {\n      var user = yield UserModel.getUserById(route.params._id);\n      console.log(\"getUser \" + user.email);\n      setUserEmail(user.email);\n    });\n    return function getUser(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  React.useEffect(function () {\n    var usrc = {\n      _id: route.params._id,\n      access_token: route.params.accessToken,\n      refresh_token: route.params.refreshToken\n    };\n    console.log(usrc);\n    setUserInfo(usrc);\n    getUser(route.params._id);\n  }, [(_route$params = route.params) == null ? void 0 : _route$params._id]);\n  var onSave = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      console.log(\"Saving post \" + userEmail + \" \" + text);\n      if (userEmail != \"\" && text != \"\") {\n        var p = {\n          senderID: userEmail,\n          text: text,\n          imageUrl: '',\n          postID: ''\n        };\n        if (imageUri != \"\") {\n          console.log(\"saving image\");\n          var url = yield PostModel.uploadImage(imageUri, userInfo);\n          p.imageUrl = url;\n          console.log(\"saving image : \" + url);\n        }\n        console.log(\"Post url on save \" + p.imageUrl);\n        yield PostModel.addPost(p, userInfo);\n        setIsLoading(false);\n        navigation.goBack();\n      } else setIsLoading(false);\n    });\n    return function onSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var onImageSelected = function onImageSelected(uri) {\n    console.log(\"onImageSelected \" + uri);\n    setImageUri(uri);\n  };\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.image,\n        children: _jsx(CustomImagePicker, {\n          image: \"\",\n          onImageSelected: onImageSelected\n        })\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: setText,\n        placeholder: \"Text\",\n        keyboardType: \"default\"\n      }), _jsx(TouchableHighlight, {\n        onPress: onSave,\n        underlayColor: COLORS.clickBackground,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.button_text,\n          children: \"Save\"\n        })\n      }), _jsx(View, {\n        style: styles.activity_indicator,\n        children: _jsx(ActivityIndicator, {\n          visible: isLoading\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10,\n    flex: 1\n  },\n  image: {\n    width: \"100%\",\n    height: 250,\n    resizeMode: \"contain\",\n    padding: 10,\n    marginBottom: 10\n  },\n  textInput: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderColor: 'grey'\n  },\n  button: {\n    margin: 12,\n    backgroundColor: 'grey',\n    borderRadius: 5\n  },\n  button_text: {\n    fontSize: 30,\n    color: 'white',\n    textAlign: \"center\",\n    marginTop: 3,\n    marginBottom: 3\n  },\n  activity_indicator: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\"\n  }\n});\nexport default Add_Post;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TextInput","TouchableHighlight","ScrollView","PostModel","COLORS","ActivityIndicator","CustomImagePicker","UserModel","jsx","_jsx","jsxs","_jsxs","Add_Post","_ref","_route$params","navigation","route","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","postID","setPostID","_useState5","_useState6","senderID","setSenderID","_useState7","_useState8","text","setText","_useState9","_useState10","imageUri","setImageUri","_useState11","_id","access_token","refresh_token","_useState12","userInfo","setUserInfo","_useState13","_useState14","userEmail","setUserEmail","getUser","_ref2","_asyncToGenerator","id","user","getUserById","params","console","log","email","_x","apply","arguments","useEffect","usrc","accessToken","refreshToken","onSave","_ref3","p","imageUrl","url","uploadImage","addPost","goBack","onImageSelected","uri","children","style","styles","container","image","textInput","onChangeText","placeholder","keyboardType","onPress","underlayColor","clickBackground","button","button_text","activity_indicator","visible","create","marginTop","flex","width","height","resizeMode","padding","marginBottom","margin","borderWidth","borderColor","backgroundColor","borderRadius","fontSize","color","textAlign","alignItems","justifyContent","position"],"sources":["/Users/ohadshalom/Desktop/devops_projects/cicd_project/frontend/screens/add_post_screen.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport { View, Text ,StyleSheet ,Image, TextInput, TouchableHighlight, ScrollView} from \"react-native\";\nimport PostModel,{Post} from \"../model/post_model\"\nimport COLORS from \"../constants/colors\";\nimport ActivityIndicator from \"./component/custom_activity_indicator\";\nimport CustomImagePicker from './component/custom_image_picker'\nimport UserModel,{ UserCredentials } from \"../model/user_model\";\n\n\nconst Add_Post: FC<{ navigation: any; route: any }> = ({\n    navigation,\n    route,\n  }) => {\n    const [isLoading,setIsLoading] =useState<boolean>(false)\n    const [postID,setPostID] = useState<String>(\"\")\n    const [senderID,setSenderID] = useState<String>(\"\")\n    const [text,setText] = useState<String>(\"\")\n    const [imageUri,setImageUri] = useState<String>(\"\")\n    const [userInfo,setUserInfo] = useState<UserCredentials>({_id:\"\",access_token:\"\",refresh_token:\"\"});\n    const [userEmail,setUserEmail] = useState<String>(\"\")\n    const getUser =async (id:String) => {\n\n\n      const user =  await UserModel.getUserById(route.params._id)   \n      console.log(\"getUser \"+user.email);\n      setUserEmail(user.email)\n     }\n    \n    React.useEffect(()=>{\n    const usrc:UserCredentials = {\n      _id:route.params._id,\n      access_token:route.params.accessToken,\n      refresh_token:route.params.refreshToken\n    }\n    console.log(usrc);\n    setUserInfo(usrc)\n    getUser(route.params._id)\n  },[route.params?._id])\n\n\n    const onSave = async ()=>{\n      setIsLoading(true)\n      console.log(\"Saving post \"+userEmail+\" \"+text);\n      \n      if(userEmail!=\"\" && text !=\"\"){\n\n        const p:Post = {\n          senderID:userEmail,\n          text:text,\n          imageUrl:'',\n          postID:'',\n        }\n\n        if(imageUri != \"\"){\n          console.log(\"saving image\")\n          const url = await PostModel.uploadImage(imageUri,userInfo)\n          p.imageUrl = url\n          console.log(\"saving image : \" + url) \n      }\n      console.log(\"Post url on save \"+p.imageUrl);\n      \n        await PostModel.addPost(p,userInfo)\n        setIsLoading(false)\n        navigation.goBack()\n      }else setIsLoading(false)\n    }\n\n\n    const onImageSelected = (uri:String)=>{\n      console.log(\"onImageSelected \" + uri)\n      setImageUri(uri)\n  }\n\n\n    return (\n      <ScrollView>\n      <View style={styles.container}>\n          <View style={styles.image} >\n              <CustomImagePicker image={\"\"} onImageSelected={onImageSelected}></CustomImagePicker>\n          </View>\n          <TextInput style={styles.textInput}\n              onChangeText={setText}\n              placeholder=\"Text\"\n              keyboardType=\"default\"></TextInput>\n          <TouchableHighlight\n              onPress={onSave}\n              underlayColor={COLORS.clickBackground}\n              style={styles.button}>\n              <Text style={styles.button_text}>Save</Text>\n          </TouchableHighlight>\n          <View style={styles.activity_indicator}>\n              <ActivityIndicator visible={isLoading}></ActivityIndicator>\n          </View>\n      </View>\n  </ScrollView>\n    );\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n        marginTop: 10,\n        flex: 1\n    },\n    image: {\n        width: \"100%\",\n        height: 250,\n        resizeMode: \"contain\",\n        padding: 10,\n        marginBottom: 10\n    },\n    textInput: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n        borderColor: 'grey'\n    },\n    button: {\n        margin: 12,\n        backgroundColor: 'grey',\n        borderRadius: 5\n    },\n    button_text: {\n        fontSize: 30,\n        color: 'white',\n        textAlign: \"center\",\n        marginTop: 3,\n        marginBottom: 3,\n    },\n    activity_indicator:{\n        width: \"100%\",\n        height: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",      \n        position: \"absolute\"\n    }\n})\n\n  export default Add_Post"],"mappings":"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"},"metadata":{},"sourceType":"module"}