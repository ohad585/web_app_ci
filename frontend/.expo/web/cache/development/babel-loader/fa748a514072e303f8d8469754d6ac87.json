{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PostModel from \"../model/post_model\";\nimport COLORS from \"../constants/colors\";\nimport ActivityIndicator from \"./component/custom_activity_indicator\";\nimport CustomImagePicker from \"./component/custom_image_picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Edit_Post = function Edit_Post(_ref) {\n  var _route$params;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    postID = _useState4[0],\n    setPostID = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    senderID = _useState6[0],\n    setSenderID = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    firstsenderID = _useState8[0],\n    setFirstSenderID = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    text = _useState10[0],\n    setText = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    imageUrl = _useState12[0],\n    setImageUrl = _useState12[1];\n  var _useState13 = useState({\n      _id: \"\",\n      access_token: \"\",\n      refresh_token: \"\"\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    userInfo = _useState14[0],\n    setUserInfo = _useState14[1];\n  React.useEffect(function () {\n    var usrc = {\n      _id: route.params.user._id,\n      access_token: route.params.user.access_token,\n      refresh_token: route.params.user.refresh_token\n    };\n    console.log(usrc);\n    setUserInfo(usrc);\n    setPostID(route.params.post.postID);\n    setSenderID(route.params.post.senderID);\n    setFirstSenderID(route.params.post.text);\n    setText(route.params.post.text);\n    setImageUrl(route.params.post.imageUrl);\n    console.log(\"Edit_post \" + postID + \" \" + text);\n  }, [(_route$params = route.params) == null ? void 0 : _route$params.post]);\n  var onSave = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      if (text != \"\" && imageUrl != \"\") {\n        var p = {\n          postID: postID,\n          senderID: senderID,\n          text: text,\n          imageUrl: ''\n        };\n        if (imageUrl != \"\") {\n          console.log(\"saving image\");\n          var url = yield PostModel.uploadImage(imageUrl, userInfo);\n          p.imageUrl = url;\n          console.log(\"saving image : \" + url);\n        }\n        yield PostModel.updatePost(p, userInfo);\n        setIsLoading(false);\n        navigation.navigate(\"Home\", {\n          _id: userInfo._id,\n          accessToken: userInfo.access_token,\n          refreshToken: userInfo.refresh_token\n        });\n      }\n    });\n    return function onSave() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onImageSelected = function onImageSelected(uri) {\n    console.log(\"onImageSelected \" + uri);\n    setImageUrl(uri);\n  };\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.image,\n        children: _jsx(CustomImagePicker, {\n          image: imageUrl,\n          onImageSelected: onImageSelected\n        })\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: setText,\n        placeholder: firstsenderID.toString(),\n        keyboardType: \"default\"\n      }), _jsx(TouchableHighlight, {\n        underlayColor: COLORS.clickBackground,\n        onPress: function onPress() {\n          onSave();\n        },\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Save\"\n        })\n      }), _jsx(View, {\n        style: styles.activity_indicator,\n        children: _jsx(ActivityIndicator, {\n          visible: isLoading\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    width: \"100%\",\n    height: 250,\n    resizeMode: \"contain\"\n  },\n  textInput: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderColor: \"grey\"\n  },\n  button: {\n    margin: 12,\n    backgroundColor: \"grey\",\n    borderRadius: 50\n  },\n  buttonText: {\n    fontSize: 40,\n    color: \"white\",\n    textAlign: \"center\",\n    marginTop: 3,\n    marginBottom: 3\n  },\n  activity_indicator: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\"\n  }\n});\nexport default Edit_Post;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TextInput","TouchableHighlight","ScrollView","PostModel","COLORS","ActivityIndicator","CustomImagePicker","jsx","_jsx","jsxs","_jsxs","Edit_Post","_ref","_route$params","navigation","route","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","postID","setPostID","_useState5","_useState6","senderID","setSenderID","_useState7","_useState8","firstsenderID","setFirstSenderID","_useState9","_useState10","text","setText","_useState11","_useState12","imageUrl","setImageUrl","_useState13","_id","access_token","refresh_token","_useState14","userInfo","setUserInfo","useEffect","usrc","params","user","console","log","post","onSave","_ref2","_asyncToGenerator","p","url","uploadImage","updatePost","navigate","accessToken","refreshToken","apply","arguments","onImageSelected","uri","children","style","styles","container","image","textInput","onChangeText","placeholder","toString","keyboardType","underlayColor","clickBackground","onPress","button","buttonText","activity_indicator","visible","create","flex","width","height","resizeMode","margin","borderWidth","padding","borderColor","backgroundColor","borderRadius","fontSize","color","textAlign","marginTop","marginBottom","position","justifyContent","alignItems"],"sources":["/Users/ohadshalom/Desktop/devops_projects/cicd_project/frontend/screens/edit_post_screen.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport { View, Text ,StyleSheet ,Image, TextInput, TouchableHighlight, ScrollView} from \"react-native\";\nimport PostModel,{Post} from \"../model/post_model\"\nimport COLORS from \"../constants/colors\";\nimport ActivityIndicator from \"./component/custom_activity_indicator\";\nimport CustomImagePicker from \"./component/custom_image_picker\";\nimport { UserCredentials } from \"../model/user_model\";\n\nconst Edit_Post: FC<{ navigation: any; route: any,}> = ({navigation,route }) => {\n    const [isLoading,setIsLoading] =useState<boolean>(false)\n    const [postID,setPostID] = useState<String>(\"\")\n    const [senderID,setSenderID] = useState<String>(\"\")\n    const [firstsenderID,setFirstSenderID] = useState<String>(\"\")\n    const [text,setText] = useState<String>(\"\")\n    const [imageUrl,setImageUrl] = useState<String>(\"\")\n    const [userInfo,setUserInfo] = useState<UserCredentials>({_id:\"\",access_token:\"\",refresh_token:\"\"});\n    \n\n    \n    React.useEffect(()=>{\n      const usrc:UserCredentials = {\n          _id:route.params.user._id,\n          access_token:route.params.user.access_token,\n          refresh_token:route.params.user.refresh_token\n      }\n      console.log(usrc);\n      setUserInfo(usrc)\n      setPostID(route.params.post.postID)\n      setSenderID(route.params.post.senderID)\n      setFirstSenderID(route.params.post.text)\n      setText(route.params.post.text)\n      setImageUrl(route.params.post.imageUrl)\n      console.log(\"Edit_post \"+postID+\" \"+text);\n      //getUser(usrc._id)\n    },[route.params?.post])\n\n    \n    \n    const onSave = async ()=>{\n      setIsLoading(true)\n      if(text!=\"\" && imageUrl !=\"\" ){\n        const p:Post = {\n          postID:postID,\n          senderID:senderID,\n          text:text,\n          imageUrl: ''\n        }\n        if(imageUrl != \"\"){\n          console.log(\"saving image\")\n          const url = await PostModel.uploadImage(imageUrl,userInfo)\n          p.imageUrl = url\n          console.log(\"saving image : \" + url) \n      }\n      \n        await PostModel.updatePost(p,userInfo)\n        setIsLoading(false)\n        navigation.navigate(\"Home\",{_id:userInfo._id,accessToken:userInfo.access_token,refreshToken:userInfo.refresh_token})\n      }\n    }\n\n    const onImageSelected = (uri:String)=>{\n      console.log(\"onImageSelected \" + uri)\n      setImageUrl(uri)\n  }\n\n\n    return (\n      <ScrollView>\n      <View style={styles.container}>\n      <View style={styles.image} >\n      <CustomImagePicker image={imageUrl} onImageSelected={onImageSelected}></CustomImagePicker>\n      </View>\n      <TextInput style={styles.textInput} onChangeText={setText} placeholder={firstsenderID.toString()} keyboardType=\"default\"></TextInput>\n      <TouchableHighlight underlayColor={COLORS.clickBackground} onPress={()=>{onSave()}} style={styles.button}>\n         <Text style={styles.buttonText}>Save</Text>\n       </TouchableHighlight>\n\n\n       <View style={styles.activity_indicator}>\n        <ActivityIndicator visible ={isLoading}></ActivityIndicator> \n       </View>\n      </View>\n      </ScrollView>\n    );\n  };\n\n\n\n\n\n\n\n\n\n\n  const styles = StyleSheet.create({\n      container:{\n        flex:1\n      },\n      image:{\n        width:\"100%\",\n        height:250,\n        resizeMode:\"contain\",\n      },\n      textInput:{\n        height:40,\n        margin:12,\n        borderWidth:1,\n        padding:10,\n        borderColor:\"grey\",\n      },\n      button:{\n        margin:12,\n        backgroundColor:\"grey\",\n        borderRadius:50\n      },\n      buttonText:{\n        fontSize:40,\n        color:\"white\",\n        textAlign: \"center\",\n        marginTop:3,\n        marginBottom:3\n      },\n      activity_indicator:{\n        position:\"absolute\",\n    justifyContent:\"center\",\n    width:\"100%\",\n    height:\"100%\",\n    alignItems:\"center\"\n      }\n  })\n\n  export default Edit_Post"],"mappings":"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"},"metadata":{},"sourceType":"module"}